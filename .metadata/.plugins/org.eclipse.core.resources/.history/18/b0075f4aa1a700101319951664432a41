package es.tributasenasturias.servicios.seguridadws.implementacion;

import java.util.Properties;

import org.apache.ws.security.WSConstants;
import org.apache.ws.security.WSSConfig;
import org.apache.ws.security.WSSecurityException;
import org.apache.ws.security.components.crypto.Crypto;
import org.apache.ws.security.components.crypto.CryptoFactory;
import org.apache.ws.security.message.WSSecHeader;
import org.apache.ws.security.message.WSSecSignature;
import org.w3c.dom.Document;

/**
 * Funcionalidad de firma de mensaje. Por el momento es una implementación muy sencilla, para comprobar que es correcta.
 * @author crubencvs
 *
 */
public class FirmanteMensaje{
	private Crypto crypto = null;
	public FirmanteMensaje() throws FirmaException{
		Preferencias preferencias;
		try {
			preferencias =Preferencias.getPreferencias();
		} catch (PreferenciasException e) {
			throw new FirmaException ("Error al recuperar las preferencias:"+e.getMessage(),e);
		}
		WSSConfig.init();
		try {
			Properties prop = new Properties();
			//Valores por defecto, deberían cargarse de configuración.
			prop.put("org.apache.ws.security.crypto.provider", "org.apache.ws.security.components.crypto.Merlin");
			prop.put("org.apache.ws.security.crypto.merlin.keystore.file", preferencias.getAlmacen());
			prop.put("org.apache.ws.security.crypto.merlin.keystore.password", preferencias.getClaveAlmacen());
			prop.put("org.apache.ws.security.crypto.merlin.keystore.type", "jks");
			crypto = CryptoFactory.getInstance(prop);
		} catch (WSSecurityException e) {
			throw new FirmaException ("Error al recuperar la instancia de 'Crypto':"+e.getMessage(),e);
		}
	}
	public String firmaMensaje (String mensaje) throws FirmaException, WSSecurityException
	{
		WSSecSignature builder = new WSSecSignature();
		builder.setKeyIdentifierType(WSConstants.BST_DIRECT_REFERENCE);
		Document doc=null;
		try {
			doc = Utils.string2Doc(mensaje);
		} catch (Exception e) {
			throw new FirmaException ("Error al convertir el mensaje a un documento XML:" + e.getMessage(),e);
		}
		 WSSecHeader secHeader = new WSSecHeader();
		 secHeader.insertSecurityHeader(doc);
		 secHeader.setMustUnderstand(true); //Deben entender las cabeceras de seguridad.
		 //Esto debería estar parametrizado.
		 builder.setUserInfo("tributasfnmtcert", "hola123");
		 Document signedDoc = builder.build(doc, crypto, secHeader);
		//Documento firmado, se pasa a texto.
		 try{
			 return Utils.doc2String(signedDoc);
		 }
		 catch (Exception e)
		 {
			 throw new FirmaException ("Error al convertir el mensaje firmado a texto para devolver:"+ e.getMessage(),e);
		 }
	}
}
